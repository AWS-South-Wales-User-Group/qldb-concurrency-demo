import { Communicator } from "./Communicator";
import { RetryConfig } from "./retry/RetryConfig";
import { Transaction } from "./Transaction";
import { TransactionExecutor } from "./TransactionExecutor";
import { TransactionExecutionContext } from "./TransactionExecutionContext";
export declare class QldbSession {
    private _communicator;
    private _isClosed;
    constructor(communicator: Communicator);
    endSession(): void;
    closeSession(): void;
    executeLambda(transactionLambda: (transactionExecutor: TransactionExecutor) => any, retryConfig: RetryConfig, executionContext: TransactionExecutionContext): Promise<any>;
    getSessionToken(): string;
    isSessionOpen(): Boolean;
    startTransaction(): Promise<Transaction>;
    private _noThrowAbort;
    private _retrySleep;
    private _sleep;
}
