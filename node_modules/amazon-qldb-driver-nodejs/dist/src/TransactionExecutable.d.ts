import { Result } from "./Result";
import { ResultReadable } from "./ResultReadable";
/**
 * Interface for execution against QLDB in the context of a transaction.
 */
export interface TransactionExecutable {
    /**
     * Execute the specified statement in the current transaction.
     * @param statement A statement to execute against QLDB as a string.
     * @param parameters Rest parameters of Ion values or JavaScript native types that are convertible to Ion for
     *                   filling in parameters of the statement.
     * @returns Promise which fulfills with a fully-buffered Result.
     */
    execute(statement: string, ...parameters: any[]): Promise<Result>;
    /**
     * Execute the specified statement in the current transaction.
     * @param statement A statement to execute against QLDB as a string.
     * @param parameters Rest parameters of Ion values or JavaScript native types that are convertible to Ion for
     *                   filling in parameters of the statement.
     * @returns Promise which fulfills with a Readable.
     */
    executeAndStreamResults(statement: string, ...parameters: any[]): Promise<ResultReadable>;
}
