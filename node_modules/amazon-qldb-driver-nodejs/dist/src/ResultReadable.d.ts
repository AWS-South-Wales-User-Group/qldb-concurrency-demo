/// <reference types="node" />
import { ExecuteStatementResult } from "aws-sdk/clients/qldbsession";
import { Readable } from "stream";
import { Communicator } from "./Communicator";
import { IOUsage } from "./stats/IOUsage";
import { TimingInformation } from "./stats/TimingInformation";
/**
 * A class representing the result of a statement returned from QLDB as a stream.
 * Extends Readable from the Node.JS Stream API interface.
 * The stream will always operate in object mode.
 */
export declare class ResultReadable extends Readable {
    private _communicator;
    private _cachedPage;
    private _txnId;
    private _shouldPushCachedPage;
    private _retrieveIndex;
    private _isPushingData;
    private _readIOs;
    private _processingTime;
    /**
     * Create a ResultReadable.
     * @param txnId The ID of the transaction the statement was executed in.
     * @param executeResult The returned result from the statement execution.
     * @param communicator The Communicator used for the statement execution.
     */
    constructor(txnId: string, executeResult: ExecuteStatementResult, communicator: Communicator);
    /**
     * Returns the number of read IO request for the executed statement. The statistics are stateful.
     * @returns IOUsage, containing number of read IOs.
     */
    getConsumedIOs(): IOUsage;
    /**
     * Returns server-side processing time for the executed statement. The statistics are stateful.
     * @returns TimingInformation, containing processing time.
     */
    getTimingInformation(): TimingInformation;
    /**
     * Implementation of the `readable.read` method for the Node Streams Readable Interface.
     * @param size The number of bytes to read asynchronously. This is currently not being used as only object mode is
     * supported.
     */
    _read(size?: number): void;
    /**
     * Pushes the values for the Node Streams Readable Interface. This method fetches the next page if is required and
     * handles converting the values returned from QLDB into an Ion value.
     * @returns Promise which fulfills with void.
     */
    private _pushPageValues;
}
